*,
*::before,
*::after {
   padding: 0;
   margin: 0;
   box-sizing: border-box;
}

@media (prefers-reduced-motion: reduce) {

   *,
   *::before,
   *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
   }
}

:root {
   --clr-very-dark-gray: 0 0% 17%;
   --clr-dark-gray: 0 0% 59%;

   --ff-sans: "Rubik", Aria, Helvetica, sans-serif;
}


body {
   font-family: var(--ff-sans);
}

h1 {
   color: white;
   font-weight: 500;
   text-align: center;
   padding-block: 1.5rem;
   font-size: clamp(1.5rem, 4vw, 2rem);
}

h3 {
   font-size: clamp(.6rem, 2vw, .85rem);
   color: hsl(var(--clr-dark-gray));
   text-transform: uppercase;
   letter-spacing: 2px;
}

h3+p {
   margin-top: .5rem;
   font-weight: 600;
   font-size: clamp(1.2rem, 3vw, 1.7rem);
}

button {
   cursor: pointer;
}

.sr-only {
   clip: rect(1px, 1px, 1px, 1px);
   clip-path: inset(50%);
   height: 1px;
   width: 1px;
   margin: -1px;
   overflow: hidden;
   padding: 0;
   position: absolute;
}

.wrapper {
   display: grid;
   grid-template-rows: clamp(12rem, 18vw, 15rem) 100vh;
}

.upper-container {
   padding-inline: 1rem;
   background: url('../images/pattern-bg-mobile.png') 100% 100% / cover;
}

@media (min-width: 30em) {
   .upper-container {
      background-image: url("../images/pattern-bg-desktop.png");
   }
}

.size-container {
   position: relative;
   max-width: 65rem;
   height: 100%;
   margin: auto;
}

.ip-form {
   --control-height: clamp(3rem, 5vw, 3.5rem);

   display: flex;
   height: max-content;
   max-width: 35rem;
   margin-inline: auto;
}

:disabled {
   opacity: 0.9;
}

.ip-form__input {
   border-radius: 1rem 0 0 1rem;
   display: block;
   width: 100%;
   border: 0;
   height: var(--control-height);
   padding-inline: 1rem;
   font-weight: 700;
}

.ip-form__input::placeholder {
   font-weight: 700;
   font-size: clamp(.92rem, 4vw, 1.1rem);
   color: hsl(var(--clr-dark-gray))
}

.ip-form__btn {
   border-radius: 0 1rem 1rem 0;
   display: block;
   aspect-ratio: 1 / 1;
   height: var(--control-height);
   background: black url('../images/icon-arrow.svg') center no-repeat;
   border: 0;
}

.ip-form__btn:hover,
.ip-form__btn:focus-visible {
   background-color: hsl(var(--clr-very-dark-gray));
}

@media (min-width: 30em) {
   .ip-form {
      --control-height: 3.5rem;
   }
}

.ip-info-wrapper {
   position: absolute;
   inset-inline: 0;
   top: clamp(10.5rem, 18vw, 11.5rem);
   z-index: 9999;
}

.ip-info {
   display: grid;
   gap: 1rem;
   padding: 2rem;

   background-color: white;
   border-radius: 1rem;
   box-shadow: 0 3px 30px hsl(0 0% 0% / .2);
   text-align: center;
}

.spinner {
   position: absolute;
   z-index: 99999;
}

@property --rotate-angle {
   syntax: '<angle>';
   initial-value: 0deg;
   inherits: false;
}

@property --translate-x {
   syntax: '<length>';
   initial-value: 0;
   inherits: false;
}

@property --translate-y {
   syntax: '<length>';
   initial-value: 0;
   inherits: false;
}

.spinner[data-loading="true"] {
   inset: 50% 0 0 50%;
   transform:
      translateX(calc(-50% + var(--translate-x))) translateY(calc(-50% + var(--translate-y))) rotate(var(--rotate-angle));

   width: 2rem;
   aspect-ratio: 1;

   border: .5rem solid black;
   border-radius: .5rem;
   animation: spin 1s ease-in-out infinite;
   backdrop-filter: blur(10px);
}

/* this part only works because the spinner is the first child of ip-info-wrapper */
.spinner[data-loading="true"] + .ip-info {
   opacity: 0.8;
}

@keyframes spin {
   0% {
      --translate-x: 0;
      --translate-y: -2rem;
      --rotate-angle: 0deg;
   }

   25% {
      --translate-x: 2rem;
      --translate-y: 0rem;
   }

   50% {
      --translate-x: 0rem;
      --translate-y: 2rem;
   }

   75% {
      --translate-x: -2rem;
      --translate-y: 0rem;
   }

   100% {
      --translate-x: 0;
      --translate-y: -2rem;
      --rotate-angle: 360deg;
   }
}

@media (min-width: 30em) {
   .ip-info {
      gap: min(2.2rem, 3vw);
      text-align: left;
      grid-template-columns: repeat(3, 1fr min-content) 1fr;
   }

   .ip-info__unit {
      padding-top: .5rem;
   }

   .ip-info__separator {
      align-self: center;
      background-color: hsl(var(--clr-dark-gray) / .5);
      width: .1rem;
      height: 5rem;
   }
}

.map {
   width: 100%;
   height: 100%;
}

footer {
   background: url('../images/pattern-bg-mobile.png') center / cover;
   color: white;
   padding: 1rem;
   text-align: center;

   >a {
      color: white;
      font-weight: 700;
      text-underline-offset: .1rem;
      text-decoration-thickness: .1rem;

      &:hover,
      &:focus-visible {
         text-decoration-thickness: .3rem;
      }
   }
}

@media (min-width: 30em) {
   footer {
      background-image: url("../images/pattern-bg-desktop.png");
   }
}

[role=alert] {
   position: fixed;
   padding: 1rem;
   max-width: max-content;
   left: 50%;
   transform: translateX(-50%);
   background-color: hsl(0 100% 30%);
   color: white;
   border-radius: .4rem;
   box-shadow: 0 5px 20px hsl(0 0% 0% / .3);
}